---
import spec from 'virtual:starlight-openapi-navigator/spec-data';
import generatedConfig from 'virtual:starlight-openapi-navigator/config';
import { DEFAULT_BASE_SLUG } from '../runtime/config.js';
import { buildOperationIndex } from '../runtime/operations.js';
import { resolveEndpointUIMode } from '../runtime/endpoint-ui.js';
import OpenApiEndpointSearch from './OpenApiEndpointSearch.astro';

const extractSecuritySchemes = (raw) => {
  if (!raw || typeof raw !== 'object') return [];
  return Object.entries(raw).map(([key, value]) => {
    const scheme = value || {};
    const type = typeof scheme.type === 'string' ? scheme.type : 'custom';
    const typeLabel = type === 'http'
      ? `${scheme.scheme || 'http'} auth`
      : type === 'apiKey'
        ? `${scheme.in || 'header'} key`
        : type === 'oauth2'
          ? 'OAuth 2.0'
          : type;
    const hintParts = [];
    if (scheme.name) hintParts.push(`Send as ${scheme.name}${scheme.in ? ` (${scheme.in})` : ''}`);
    if (scheme.bearerFormat && scheme.scheme === 'bearer') {
      hintParts.push(`Bearer format: ${scheme.bearerFormat}`);
    }
    return {
      key,
      type,
      typeLabel,
      description: scheme.description || '',
      hint: hintParts.join(' â€¢ '),
    };
  });
};

const info = spec.info || {};
const stats = spec.stats || { operations: 0, tags: 0, deprecatedOperations: 0 };
const servers = Array.isArray(spec.servers) ? spec.servers : [];
const securitySchemes = extractSecuritySchemes(spec.document?.components?.securitySchemes);
const defaultSecurity = Array.isArray(spec.document?.security)
  ? spec.document.security.map((entry) => Object.keys(entry)[0]).filter(Boolean)
  : [];
const configuredSlug = typeof generatedConfig?.baseSlug === 'string' && generatedConfig.baseSlug.length
  ? generatedConfig.baseSlug
  : DEFAULT_BASE_SLUG;
const baseHref = `/${configuredSlug}`;
const getTagDisplayName = (tag) => tag?.metadata?.displayName ?? tag.name;
const tagGroups = Array.isArray(spec.tags)
  ? spec.tags.map((tag) => ({
      tag,
      operations: Array.isArray(tag.operations)
        ? tag.operations
            .map((operation) => ({
              slug: operation.slug,
              method: (operation.method || '').toUpperCase(),
              path: operation.path,
              summary: operation.summary,
              deprecated: Boolean(operation.deprecated),
            }))
            .filter((operation) => operation.slug && operation.path)
        : [],
    }))
  : [];

const configuredEndpointUI =
  typeof generatedConfig?.endpointUI === 'string' ? generatedConfig.endpointUI : 'auto';
const resolvedEndpointUI =
  typeof generatedConfig?.resolvedEndpointUI === 'string'
    ? generatedConfig.resolvedEndpointUI
    : resolveEndpointUIMode(configuredEndpointUI, stats.operations || 0);
const operationsIndex = buildOperationIndex(spec, configuredSlug);
const hasOperations = operationsIndex.length > 0;
const showMenu = resolvedEndpointUI === 'menu' && tagGroups.some(({ operations }) => operations.length > 0);
const showSearch = resolvedEndpointUI === 'search' && hasOperations;
---

<div class="api-overview sl-markdown-content">
  {info.description && (
    <p class="lead">{info.description}</p>
  )}

  <div class="api-overview__stats">
    <div class="api-overview__stat">
      <span class="api-overview__stat-label">Operations</span>
      <span class="api-overview__stat-value">{stats.operations}</span>
    </div>
    <div class="api-overview__stat">
      <span class="api-overview__stat-label">Tag groups</span>
      <span class="api-overview__stat-value">{stats.tags}</span>
    </div>
    <div class="api-overview__stat">
      <span class="api-overview__stat-label">Deprecated</span>
      <span class="api-overview__stat-value">{stats.deprecatedOperations}</span>
    </div>
  </div>

  {servers.length > 0 && (
    <section>
      <h2 id="servers">Servers</h2>
      <ul class="api-overview__server-list">
        {servers.map((server) => (
          <li>
            <code>{server.url}</code>
            {server.description && <span class="description">{server.description}</span>}
          </li>
        ))}
      </ul>
    </section>
  )}

  {(securitySchemes.length > 0 || defaultSecurity.length > 0) && (
    <section>
      <h2 id="auth">Authentication</h2>
      {defaultSecurity.length > 0 && (
        <p class="api-overview__auth-default">
          Default security requirements: {defaultSecurity.join(', ')}
        </p>
      )}
      {securitySchemes.length > 0 && (
        <div class="api-overview__security">
          {securitySchemes.map((scheme) => (
            <article class="api-overview__security-card">
              <header>
                <h3>{scheme.key}</h3>
                <span class="type">{scheme.typeLabel}</span>
              </header>
              {scheme.hint && <p>{scheme.hint}</p>}
              {scheme.description && <p>{scheme.description}</p>}
            </article>
          ))}
        </div>
      )}
    </section>
  )}

  {showMenu && (
    <section>
      <h2 id="browse">Browse by tag</h2>
      <div class="api-overview__tag-grid">
        {tagGroups
          .filter(({ operations }) => operations.length > 0)
          .map(({ tag, operations }) => (
            <article class="api-overview__tag-card">
              <header>
                <h3 class="name">{getTagDisplayName(tag)}</h3>
                <span class="meta">{operations.length} {operations.length === 1 ? 'operation' : 'operations'}</span>
              </header>
              {tag.description && <p class="summary">{tag.description}</p>}
              <ul class="api-overview__operation-list">
                {operations.map((operation) => (
                  <li>
                    <a
                      class="api-overview__operation-link"
                      href={`${baseHref}/${tag.slug}/${operation.slug}/`}
                    >
                      <span class={`api-overview__operation-method api-overview__operation-method--${operation.method.toLowerCase()}`}>
                        {operation.method}
                      </span>
                      <code>{operation.path}</code>
                    </a>
                    {operation.summary && (
                      <p class="api-overview__operation-summary">{operation.summary}</p>
                    )}
                    {operation.deprecated && (
                      <span class="api-overview__operation-badge">Deprecated</span>
                    )}
                  </li>
                ))}
              </ul>
            </article>
          ))}
      </div>
    </section>
  )}

  {showSearch && (
    <section>
      <h2 id="search">Search endpoints</h2>
      <OpenApiEndpointSearch
        operations={operationsIndex}
        inputId="overview-endpoint-search"
        helperText="Start typing to filter endpoints by path, method, tag, or summary."
      />
    </section>
  )}

  {Array.isArray(spec.schemas) && spec.schemas.length > 0 && (
    <section>
      <h2 id="schemas">Component schemas</h2>
      <p>
        Inspect reusable objects, error shapes, and payload contracts in the{' '}
        <a href={`${baseHref}/schemas`}>schema explorer</a>.
      </p>
    </section>
  )}
</div>

<style scoped>
.api-overview {
  display: flex;
  flex-direction: column;
  gap: 2.5rem;
}

.api-overview .lead {
  font-size: 1.05rem;
  color: var(--color-muted-fg);
}

.api-overview__stats {
  display: grid;
  gap: 1rem;
  grid-template-columns: repeat(auto-fit, minmax(12rem, 1fr));
}

.api-overview__stat {
  padding: 1rem 1.5rem;
  border-radius: 0.75rem;
  border: 1px solid var(--color-border);
  background: var(--color-bg-selected);
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}

.api-overview__stat-label {
  font-size: 0.875rem;
  color: var(--color-muted-fg);
  text-transform: uppercase;
  letter-spacing: 0.08em;
}

.api-overview__stat-value {
  font-size: 1.75rem;
  font-weight: 600;
}

.api-overview__server-list {
  display: flex;
  flex-direction: column;
  gap: 0.75rem;
  list-style: none;
  padding: 0;
}

.api-overview__server-list li {
  display: flex;
  flex-direction: column;
  gap: 0.35rem;
  padding: 1rem 1.25rem;
  border-radius: 0.75rem;
  border: 1px solid var(--color-border);
  background: var(--color-bg-muted, var(--color-bg));
}

.api-overview__server-list code {
  font-size: 0.95rem;
  font-weight: 500;
}

.api-overview__server-list .description {
  color: var(--color-muted-fg);
  font-size: 0.9rem;
}

.api-overview__auth-default {
  color: var(--color-muted-fg);
}

.api-overview__security {
  display: grid;
  gap: 1rem;
  grid-template-columns: repeat(auto-fit, minmax(16rem, 1fr));
}

.api-overview__security-card {
  border: 1px solid var(--color-border);
  border-radius: 0.75rem;
  background: var(--color-bg-muted, var(--color-bg));
  padding: 1.25rem;
  display: flex;
  flex-direction: column;
  gap: 0.75rem;
}

.api-overview__security-card header {
  display: flex;
  justify-content: space-between;
  align-items: baseline;
  gap: 1rem;
}

.api-overview__security-card h3 {
  margin: 0;
}

.api-overview__security-card .type {
  font-size: 0.75rem;
  text-transform: uppercase;
  letter-spacing: 0.1em;
  color: var(--color-muted-fg);
}

.api-overview__tag-grid {
  display: grid;
  gap: 1rem;
  grid-template-columns: repeat(auto-fit, minmax(16rem, 1fr));
}

.api-overview__tag-card {
  display: flex;
  flex-direction: column;
  gap: 0.9rem;
  padding: 1.5rem;
  border-radius: 0.75rem;
  border: 1px solid var(--color-border);
  background: var(--color-bg-muted, var(--color-bg));
  transition: border-color 150ms ease, transform 150ms ease;
}

.api-overview__tag-card:hover {
  border-color: var(--color-primary);
  transform: translateY(-2px);
}

.api-overview__tag-card header {
  display: flex;
  justify-content: space-between;
  align-items: baseline;
  gap: 0.75rem;
}

.api-overview__tag-card .name {
  font-weight: 600;
  font-size: 1.05rem;
  margin: 0;
}

.api-overview__tag-card .summary {
  color: var(--color-muted-fg);
  font-size: 0.95rem;
  margin: 0;
}

.api-overview__tag-card .meta {
  font-size: 0.8rem;
  color: var(--color-muted-fg);
  text-transform: uppercase;
  letter-spacing: 0.08em;
}

.api-overview__operation-list {
  list-style: none;
  margin: 0;
  padding: 0;
  display: flex;
  flex-direction: column;
  gap: 0.85rem;
}

.api-overview__operation-list li {
  display: flex;
  flex-direction: column;
  gap: 0.4rem;
}

.api-overview__operation-link {
  display: inline-flex;
  align-items: center;
  gap: 0.65rem;
  font-weight: 500;
  text-decoration: none;
  color: inherit;
}

.api-overview__operation-link:hover {
  color: var(--color-primary);
}

.api-overview__operation-method {
  font-size: 0.75rem;
  font-weight: 600;
  text-transform: uppercase;
  padding: 0.25rem 0.55rem;
  border-radius: 999px;
  color: var(--color-bg);
  background: var(--color-primary);
}

.api-overview__operation-method--get { background: var(--color-green, #2f9e44); }
.api-overview__operation-method--post { background: var(--color-blue, #1c7ed6); }
.api-overview__operation-method--delete { background: var(--color-red, #e03131); }
.api-overview__operation-method--put { background: var(--color-yellow, #e67700); }
.api-overview__operation-method--patch { background: var(--color-teal, #099268); }

.api-overview__operation-summary {
  margin: 0;
  font-size: 0.9rem;
  color: var(--color-muted-fg);
}

.api-overview__operation-badge {
  align-self: flex-start;
  font-size: 0.7rem;
  text-transform: uppercase;
  letter-spacing: 0.08em;
  padding: 0.2rem 0.45rem;
  border-radius: 999px;
  background: var(--color-orange, #f08c00);
  color: var(--color-bg);
}
</style>
